/**
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
pattern = "abba", str = "dog cat cat dog" should return true.
pattern = "abba", str = "dog cat cat fish" should return false.
pattern = "aaaa", str = "dog cat cat dog" should return false.
pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.
**/

public class Solution {
    public boolean wordPattern(String pattern, String str) {
        int n=pattern.length();
        String[] s=str.split(" ");
        int m=s.length;
        if(n!=m)
        return false;
        HashMap<Character,String> hmap=new HashMap<Character,String>();
        for(int i=0;i<n;i++)
        {  char c=pattern.charAt(i);
          if(!hmap.containsKey(c))
          {
              if((!hmap.isEmpty())&&hmap.containsValue(s[i]))
              return false;
              else
             { hmap.put(c,s[i]);}
          }
          else {
              if(!hmap.get(c).equals(s[i]))
              return false;
          }
        }
        return true;
    }
}