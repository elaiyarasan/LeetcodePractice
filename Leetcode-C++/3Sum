/**
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

**/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        int n=nums.size();
        if(n<3) 
        return res;
        sort(nums.begin(),nums.end());
        
        for(int i=0;i<n;i++)
        {
            if(i>0&&nums[i]==nums[i-1])
            continue;
            
            int j=i+1;
            int k=n-1;
            while(j<k)
            {
                if(j>i+1&&nums[j]==nums[j-1])
                {
                    j++;
                    continue;
                }
                if(k<n-1&&nums[k]==nums[k+1])
                {
                    k--;
                    continue;
                }
                int sum=nums[i]+nums[j]+nums[k];
                if(sum<0)
                {
                    j++;
                }
                else if(sum==0)
                {
                    vector<int>sub;
                    sub.push_back(nums[i]);
                    sub.push_back(nums[j]);
                    sub.push_back(nums[k]);
                    res.push_back(sub);
                    j++;
                }
                else
                {
                    k--;
                }
            }
        }
        return res;
    }
};