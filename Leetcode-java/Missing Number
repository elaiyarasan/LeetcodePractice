/**
Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

For example,
Given nums = [0, 1, 3] return 2.

Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?

Credits:
Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
**/
// (1+n)*n/2-sumof(nums)=missing number
public class Solution {
    public int missingNumber(int[] nums) {
        int sum1 = nums.length;;
        int sum2 = 0;
        for(int i = 0; i < nums.length; i++){
            sum1 += i;
            sum2 += nums[i];
        }
        return sum1 - sum2;
    }
    
}