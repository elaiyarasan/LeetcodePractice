/**
You need to find the largest value in each row of a binary tree.

Example:
Input: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

Output: [1, 3, 9]
/**
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if(root == null)
        return res;
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        while(!que.isEmpty()){
            int max = Integer.MIN_VALUE;
            Queue<TreeNode> temp = new LinkedList<>();
            while(!que.isEmpty()){
                TreeNode cur = que.poll();
                if(cur.val > max){
                    max = cur.val; 
                }
                    if(cur.left != null){
                        temp.add(cur.left);
                    }
                    if(cur.right != null){
                        temp.add(cur.right);
                    }
                
            }
            res.add(max);
            que = temp;
        }
        return res;
    }
}