/**
Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
**/

public class Solution {
    public int singleNumber(int[] nums) {
        HashMap<Integer,Integer> hmap=new HashMap<Integer,Integer>();
        for(int i=0;i<nums.length;i++){
            if(!hmap.containsKey(nums[i]))
            {
                hmap.put(nums[i],1);
            }
            else
            hmap.put(nums[i],hmap.get(nums[i])+1);
        }
        for(int key: hmap.keySet()){
            if(hmap.get(key)==1)
            return key;
        }
        return nums[0];
    }
}