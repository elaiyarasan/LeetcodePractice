/**
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

**/
/* 
public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> res=new ArrayList<>();
        res.add(1);
        if(rowIndex==0)
        return res; 
        int i=1;
        while(i<=rowIndex)
        {
            ArrayList<Integer> sub=new ArrayList<Integer>();
            sub.add(1);
            for(int j=1;j<res.size();j++)
            {
                sub.add(res.get(j-1)+res.get(j));
            }
            sub.add(1);
            res=sub;
            i++;
        }
        return res;
    }
}