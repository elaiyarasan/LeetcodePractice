/**
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

Show Company Tags
Show Tags
Show Similar Problems


**/
/* 
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int depth(TreeNode root)
    {
        if(root==null)
        return 0;
        return 1+Math.max(depth(root.left),depth(root.right));
    }
    public boolean isBalanced(TreeNode root) {
        if(root==null)
        return true;
        if(Math.abs(depth(root.left)-depth(root.right))<=1&&isBalanced(root.left)&&isBalanced(root.right))
        return true;
        else
        return false;
    }
}