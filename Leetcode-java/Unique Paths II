
/**
Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

Note: m and n will be at most 100.

Show Company Tags
Show Tags
Show Similar Problems

/**
public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m=obstacleGrid.length,n=obstacleGrid[0].length;
        if(obstacleGrid==null||m==0||n==0)
        return 0;
        int[][] matrix=new int[m][n];
    
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(obstacleGrid[i][j]==1)
                matrix[i][j]=0;
                else {
                    if(i==0||j==0)
                    {
                        if(i>0&&matrix[i-1][j]==0)
                        matrix[i][j]=0;
                        else if(j>0&&matrix[i][j-1]==0)
                        matrix[i][j]=0;
                        else
                        matrix[i][j]=1;
                    }
                    else
                    matrix[i][j]=matrix[i-1][j]+matrix[i][j-1];
                }
                
            }
        }
        return matrix[m-1][n-1];
    }
}