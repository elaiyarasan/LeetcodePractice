/**
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
**/
public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        ArrayList<List<Integer>> res=new ArrayList<>();
        if(nums==null)
        return res;
        if(nums.length<3)
        return res;
        Arrays.sort(nums);
        for(int i=0;i+2<nums.length;i++)
        {
            if(i>0&&nums[i]==nums[i-1])
            continue;
            int j=i+1;
            int k=nums.length-1;
            while(j<k){
                if(j>i+1&&nums[j]==nums[j-1])
                {
                    j++;
                    continue;
                }
                if(k<nums.length-1&&nums[k]==nums[k+1])
                {
                    k--;
                    continue;
                }
                int sum=nums[i]+nums[j]+nums[k];
                if(sum==0)
                {
                    ArrayList<Integer> sub=new ArrayList<Integer>();
                    sub.add(nums[i]);
                    sub.add(nums[j]);
                    sub.add(nums[k]);
                    res.add(sub);
                    j++;
                }
                else if(sum<0)
                {
                    j++;
                }
                else if(sum>0)
                {
                    k--;
                }
            }
        }
        return res;
    }
}