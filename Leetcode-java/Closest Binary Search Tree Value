/**
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:
Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.
**/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    double min;
    int minvalue;
    public void search(TreeNode root,double target)
    {
        if(root==null)
        return;
        if(min>Math.abs(root.val-target))
            {
                min=Math.abs(root.val-target);
                minvalue=root.val;
            }
        if(target<root.val)
        {
            search(root.left,target);
        }
        else
        {
            search(root.right, target);
        }
    }
    public int closestValue(TreeNode root, double target) {
        minvalue=root.val;
        min=Math.abs(root.val-target);
        search(root,target);
        return minvalue;
        
    }
}