/**
	Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]


**/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        ArrayList<List<Integer>> result=new ArrayList<>();
        if(root==null)
        return result;
        
        LinkedList<TreeNode> que=new LinkedList<TreeNode>();
        que.add(root);
        while(!que.isEmpty())
        {
            ArrayList<Integer> list=new ArrayList<Integer>();
            LinkedList<TreeNode> temp=new LinkedList<TreeNode>();
            while(!que.isEmpty())
            {
              TreeNode cur=que.poll();
              list.add(cur.val);
             if(cur.left!=null)
             {
                   temp.add(cur.left);
             }
            if(cur.right!=null)
            {
                temp.add(cur.right);
            }
            
           }
           result.add(list);
           que=temp;
        }
        return result;
    }
}