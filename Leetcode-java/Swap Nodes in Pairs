/**

Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.

Show Company Tags
Show Tags
Show Similar Problems


**/
/* 
public class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null)
        return head;
        if(head.next==null)
        return head;
        ListNode pre=new ListNode(0);
        ListNode p0=pre,p1=head, p2=head.next;
        
        while(p2!=null)
        {
            p0.next=p2;
            p1.next=p2.next;
            p2.next=p1;
            p0=p1;
            p1=p1.next;
            if(p1==null)
            return pre.next;
            p2=p1.next;
        }
        return pre.next;
    }
}