/**
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
pattern = "abba", str = "dog cat cat dog" should return true.
pattern = "abba", str = "dog cat cat fish" should return false.
pattern = "aaaa", str = "dog cat cat dog" should return false.
pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.

**/
/* 
public class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] match=str.split(" ");
        if(pattern.length()!=match.length)
        return false;
        HashMap<Character,String> hmap=new HashMap<Character,String>();
        for(int i=0;i<pattern.length();i++)
        {
            if(!hmap.containsKey(pattern.charAt(i))&&!hmap.containsValue(match[i]))
            {
                hmap.put(pattern.charAt(i),match[i]);
            }
            else if(!hmap.containsKey(pattern.charAt(i))&&hmap.containsValue(match[i]))
            {
                return false;
            }
            else
            {
                if(!hmap.get(pattern.charAt(i)).equals(match[i]))
                return false;
            }
        }
        return true;
    }
}