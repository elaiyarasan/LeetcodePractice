/**
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
**/
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public TreeNode binarysearch(int[] nums,int start,int end){
        
        if(start>end)
        return null;
        if(start==end){
            TreeNode root=new TreeNode(nums[start]);
            return root;
        }
        int mid=(end+start)/2;
       
        TreeNode root=new TreeNode(nums[mid]);
        root.left=binarysearch(nums,start,mid-1);
        root.right=binarysearch(nums,mid+1,end);
        return root;
     }
        
    
    public TreeNode sortedArrayToBST(int[] nums) {
        if(nums==null||nums.length==0)
        return null;
        int start=0,end=nums.length-1;
        return binarysearch(nums,start,end);
    }
}