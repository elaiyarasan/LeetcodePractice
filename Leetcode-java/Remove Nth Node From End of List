/**
Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.

**/
/* 
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(n==0)
        return head;
        if(head==null)
        return head;
        ListNode pre=new ListNode(0);
        pre.next=head;
        ListNode p1=pre,p2=pre;
        int i=0;
        while(i<n)
        {   
            if(p1.next==null)
            return head;
            
            p1=p1.next;
            i++;
        }
        while(p1.next!=null)
        {
            p1=p1.next;
            p2=p2.next;
        }
        p2.next=p2.next.next;
        return pre.next;
    }
}