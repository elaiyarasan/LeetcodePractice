/**
Given a binary tree, count the number of uni-value subtrees.

A Uni-value subtree means all nodes of the subtree have the same value.

For example:
Given binary tree,
              5
             / \
            1   5
           / \   \
          5   5   5
return 4.
**/
/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */

public class Solution {
    int ret = 0;
    public int countUnivalSubtrees(TreeNode root) {
        helper(root);
        return ret;
    }
    private void helper(TreeNode root){
        if(root==null) return;
        if(isUni(root)) ret++;
        helper(root.left);
        helper(root.right);
    }
    private boolean isUni(TreeNode root){
        if(root==null || (root.left==null && root.right==null)) return true;
        if(root.left!=null && root.val!=root.left.val) return false;
        if(root.right!=null && root.val!=root.right.val) return false;
        return (isUni(root.left) && isUni(root.right));
    }
}