/**
	Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.


**/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(p.val>=q.val)
        {
            TreeNode temp=p;
            p=q;
            q=temp;
        }
        if(root.val>=p.val&&root.val<=q.val)
        return root;
        else if(q.val<root.val)
        {
            return lowestCommonAncestor(root.left,p,q);
        }
        else if(p.val>root.val)
        {
            return lowestCommonAncestor(root.right,p,q);
        }
        return root;
    }
}