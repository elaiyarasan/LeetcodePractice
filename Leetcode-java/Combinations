/**
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]**/
public class Solution {
    private List<List<Integer>> ans = new ArrayList<List<Integer>>();
    public List<List<Integer>> combine(int n, int k) {
        int s = 1;
        List<Integer> subl = new ArrayList<Integer>();
        helper(s,n,k,subl);
        return ans;
    }
    public void helper(int s, int n, int k, List<Integer> subl){
        if(k == 0){
            ans.add(new ArrayList<Integer>(subl));//IMPORTANT
            return;
        }
        for(int i = s; i <= n - k + 1; i++){
            subl.add(i);
            helper(++s,n,k-1,subl);//++s!!!
            //IMPORTANT
            subl.remove(subl.size() - 1);
        }
    }
}