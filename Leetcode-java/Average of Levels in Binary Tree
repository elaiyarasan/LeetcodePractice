/**
Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.

Example 1:
Input:
    3
   / \
  9  20
    /  \
   15   7
Output: [3, 14.5, 11]
Explanation:
The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5
/**
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res=new ArrayList<>();
        if(root==null)
        return res;
        LinkedList<TreeNode> que=new LinkedList<>();
        que.add(root);
        while(!que.isEmpty())
        {
            int num = 0;
            double acc = 0;
            LinkedList<TreeNode> temp=new LinkedList<TreeNode>();
            while(!que.isEmpty())
            {
                TreeNode cur=que.poll();
                acc += cur.val;
                num ++;
                if(cur.left!=null)
                temp.add(cur.left);
                if(cur.right!=null)
                temp.add(cur.right);
            }
            res.add(acc/num);
            que=temp;
            
        }
        return res;
        
    }
}