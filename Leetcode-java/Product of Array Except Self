/**
Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Solve it without division and in O(n).

For example, given [1,2,3,4], return [24,12,8,6].

Follow up:
Could you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose**/
/* 
public class Solution {
    public int[] productExceptSelf(int[] nums) {
        int flag=0;//record #of 0
        int sum=1;
        
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]!=0)
            sum*=nums[i];
            else
            flag++;
        }
        for(int j=0;j<nums.length;j++)
        {
            if(flag==2)
            nums[j]=0;
            if(flag==1)
            {
                if(nums[j]==0)
                nums[j]=sum;
                else
                nums[j]=0;
            }
            if(flag==0)
            nums[j]=sum/nums[j];
        }
        return nums;
    }
}