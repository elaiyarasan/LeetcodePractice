Basic Caculator
/**
Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

You may assume that the given expression is always valid.

Some examples:
"3+2*2" = 7
" 3/2 " = 1
" 3+5 / 2 " = 5
Note: Do not use the eval built-in library function.
**/
/*
 * No need of stack.
 * Maintain a product and a op.
 * If met +-, based on op add num to ans or operate on product then add it to ans.
 * If met /*, based on op set product or operate on product.
 */

//Stack
public class Solution {
      public int calculate(String s) {
    	Stack<Integer> stack = new Stack<Integer>();
    	s = s.replaceAll(" ", "");
    	s=s+"+";
    	int num = 0;
    	char sign = '+';
    	for(char ch: s.toCharArray()) {
    		if(ch-'0' >= 0 && ch-'0' <= 9) {
    			num = num*10+(ch-'0');
    		} else {
	    		if (sign == '+') {
	    			stack.push(num);
	    		} else if (sign == '-') {
	    			stack.push(-num);
	    		} else if (sign == '*') {
	    			stack.push(stack.pop()*num);
	    		} else {
	    			stack.push(stack.pop()/num);
	    		}
				num = 0;
				sign = ch;
    		}
    	}
	
    	int result = 0;
    	while(!stack.isEmpty()) {
    		result += stack.pop();
    	}
    	return result;
    }
}

//No stack
public class Solution {
    public int calculate(String s) {
        int ans = 0, num = 0, product = 1, op = 1; // op 1: +; -1: -; 2: *; 3: /
        for (char c: s.toCharArray()) {
            switch(c) {
                case ' ':
                    break;
                case '+':
                case '-':
                    ans += op == 2 ? product*num : op == 3 ? product/num : op*num;
                    op = c == '+' ? 1 : -1;
                    num = 0;
                    break;
                case '*':
                case '/':
                    product = op == 2 ? product*num : op == 3 ? product/num : op*num;
                    op = c == '*' ? 2 : 3;
                    num = 0;
                    break;
                default:
                    num = num * 10 + c-'0';
                    break;
            }
        }
        ans += op == 2 ? product*num : op == 3 ? product/num : op*num;
        return ans;
    }
}