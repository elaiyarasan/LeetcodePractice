/**
Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.

**/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null)
        return head;
        if(head.next==null)
        return head;
        ListNode p1=head,p2;
        while(p1!=null)
        {
            p2=p1.next;
            while(p2!=null&&p2.val==p1.val)
            {
                p2=p2.next;
            }
            p1.next=p2;
            p1=p2;
           
        }
        return head;
    }
}